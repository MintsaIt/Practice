//교수님 예제 GPT수정

#include <stdio.h>

int main() {
    // 원본 코드: 초기화 방식이 가독성 떨어짐 (수정 권장)
    
int a[2][3][2] = { 1,2,3,4,5,6,7,8,9,10,11,12 };  // 작동은 하지만 계층 구조 불분명

    // 원본 코드: 포인터 선언 문법 오류 없음 (유지 가능)
    int((*p)[3])[2];  // int (*p)[3][2] 로 작성하는 것이 더 일반적

    int i, j, t;
    p = a;

    for (i = 0; i < 2; i++) {
        // 원본 코드: #m → \n 으로 수정 필요
        printf("-- %d층 --\n", i + 1);  // #m → \n으로 변경

        for (j = 0; j < 3; j++) {
            for (t = 0; t < 2; t++) {
                printf("[%d][%d][%d] : %d ", i, j, t, a[i][j][t]);
            }
            // 원본 코드: #m → \n 으로 수정 필요
            printf("\n");  // #m → \n으로 변경
        }
    }

    // 원본 코드: 인덱스 [1][2][1] → [1][1][0]으로 잘못 작성됨
    printf("\na[1][1][0]의 값 : %d\n", a[1][1][0]);  // 원본은 [1][2][1]이었으나 실제 코드는 [1][1][0]

    // 원본 코드: %d → %p, (void*) 캐스팅 필요
    printf("배열 a의 주소 : %p\n", (void*)a);  // %d → %p로 수정

    // 원본 코드: pi+| → p+1로 수정 필요 (오타)
    printf("포인터 연산 결과 : %d\n", *(*(*(p + 1) + 1) + 0));  // pi+| → p+1 수정

    return 0;
}